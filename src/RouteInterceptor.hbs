import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';
import { Observable } from 'rxjs';

{{#each imports}}
import { {{name}} } from '{{path}}';
{{/each}}

type RouteControllers = {
  [name: string]: { 
    [name: string]: {
      returnType: any;
    }
  }
}

const controllers: RouteControllers = {
    {{#each controllers}}
    {{name}}: {
        {{#each methods}}
        {{name}}: {
            returnType: {{returnTypeInfo.name}}
        },
        {{/each}}
    },
    {{/each}}
}

@Injectable()
export class RouteInterceptor implements NestInterceptor {
  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {
    const method = controllers[context.getClass().name][context.getHandler().name];
    console.log(method);
    return next
      .handle();
  }
}